<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIAAHBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADnElEQVRoQ+1ZMUgr
        QRCd/7GwsBCSwsLCQlExgoWFhYVFCgtLCwuLFCnSaWEhGMFGLCy0EGwECwsLG8HCQkVFQwojFhFSpFBQ
        MKCQgIWCwv59Q1ZinPvuefe5H7gHj+VmZi8zs7uzc/qLiJRmw+J3dWxYhAEEjTCAoBEGEDTCAIJGwwfg
        ayvR3t5OU1NTNDAwQJ2dnXR9fU2Xl5e0urpKlUqlauU/EIBnTk5OqnK5rIC7uzt1fHysHh8fP55HR0fF
        eT5QFLoinAMKhYIaHBz8pIvH4+rm5ka9vb0pvTKfdD5RFFqzubmZHUS2o9GoaKO3Fq/O1dWVampqEm08
        UBRaExkGUqmUqDecnZ1lu/oV8krPVWhoaIjHw8NDHp1g9MbeL3gOIBKJ8Pj09MSjE0wV0luOR7/gOYDT
        01MeY7EYj04w+vPzcx79hLi3bNna2sp7G2VT0oM4uNlsVj0/P/9/hxhMp9McxPr6OlelWh0C3NraYn0y
        mfyk84mi0DWNk8ViUa2srLCzCOjh4YHlS0tL4jwfKApdsa2tjZ11Ai6xhYUFXg1pvhd66oX0xUVzc3Ok
        7wDSe5tOTk7o6OiIbm9vqVQqUUdHB/X19dHw8DCXT1SixcVFWltbo9fX1+pbvONLVDZE1tE6AGdnZ0o7
        K9oZ6iDUxcUF2+NWxu19cHCglpeXVU9PjzjHkqLwrzTOY2vghrWpLNPT02wPmGYPI/Dy8sJ6aZ4FRaEj
        4Ww+n+cfHhsbE23qOTMzw/a1zR4aQLwL2UeJBZCM+rkWFIWOTCQS/GObm5uivp76u4AzD+dbWlpYps8D
        v2NiYoKfEQhW5IcdqygUaTpPLL1tRUFJBWqbuJGREZYhGUaGM4SthHJsZDZ01UrojHFlmZ+ft/7CQgW6
        v7+nXC7HlUg7z19sQHd3Nz8bG3zBGZ0biJFJRDaRJbMVbIjVQrUxHz1OQDuObQlI73Giq3tgb2+PV6C/
        v78q+R66xJKuWtTb20vj4+PcjSLz+sDSxsYGZTIZen9/p93dXdrf32fbrq6u6mw7fInKiTho29vbos6J
        5gzgMBuZdAbwNYdmb2dn50NmSVHoG3UbzdsOpdLcF7jUAPwhwNjBcQDBGZklRaGvxCUFYAVRbRAI9jzO
        EjJvnMdqSfO/oSj0nbikUOexTdB64MBixLNx3qyQS4rCf0JcUsg2Wm4AI55/sG0+GP6TL2iEAQSNMICg
        EQYQNMIAgkaDB0D0B8SNXhIpz7dxAAAAAElFTkSuQmCC
</value>
  </data>
</root>